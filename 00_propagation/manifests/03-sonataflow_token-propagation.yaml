apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: Propagate token
    sonataflow.org/expressionLang: jq
    sonataflow.org/profile: gitops
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: token-propagation
    sonataflow.org/workflow-app: token-propagation
  name: token-propagation
spec:
  flow:
    functions:
      - name: getWithBearerTokenSecurityScheme
        operation: specs/dumb-server.yaml#getWithBearerTokenSecurityScheme
        type: rest
      - name: getWithOtherBearerTokenSecurityScheme
        operation: specs/dumb-server.yaml#getWithOtherBearerTokenSecurityScheme
        type: rest
      - name: print
        operation: sysout
        type: custom
      - name: successResult
        operation: '{ "result": { "completedWith":"success", "message": "Token propagated, check the dumb server logs", "outputs":[] } }'
        type: expression
    start:
      stateName: Print inputs
    states:
      - actionMode: sequential
        actions:
          - actionDataFilter:
              useResults: true
            functionRef:
              invoke: sync
              refName: getWithBearerTokenSecurityScheme
            name: getWithBearerTokenSecurityScheme
          - actionDataFilter:
              useResults: true
            functionRef:
              invoke: sync
              refName: getWithOtherBearerTokenSecurityScheme
            name: getWithOtherBearerTokenSecurityScheme
          - actionDataFilter:
              useResults: true
            functionRef:
              invoke: sync
              refName: successResult
            name: setOutput
        end:
          terminate: true
        name: Print inputs
        type: operation
  podTemplate:
    container:
      image: quay.io/gfarache/token-propagation
      resources: {}
  resources:
    configMaps:
      - configMap:
          name: 01-token-propagation-resources-specs
        workflowPath: specs
  persistence:
    postgresql:
      secretRef:
        name: sonataflow-psql-postgresql
        userKey: postgres-username
        passwordKey: postgres-password
      serviceRef:
        name: sonataflow-psql-postgresql
        port: 5432
        databaseName: sonataflow
        databaseSchema: token-propagation
status:
  address: {}
  lastTimeRecoverAttempt: null
